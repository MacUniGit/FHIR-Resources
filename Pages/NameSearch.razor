@page "/searchbyname"
@using Hl7.Fhir.Model;
@using Hl7.Fhir.Rest;
@using Hl7.Fhir.Serialization;

<PageTitle>Search for a Patient</PageTitle>

<div class="my-3">
	<h1 class="text-center font-bold text-4xl">Patient Search by name</h1>
</div>




<form class="flex items-center my-3" onsubmit=@PatientNameSearch>
	<label for="simple-search" class="sr-only">Search</label>
	<div class="relative w-full">
		<div class="flex absolute inset-y-0 left-0 items-center pl-3 pointer-events-none">
			<svg aria-hidden="true" class="w-5 h-5 text-gray-500 dark:text-gray-400" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z" clip-rule="evenodd"></path></svg>
		</div>
		<input type="text" @bind-value=inputPatientName id="simple-search" class=" borderless bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full pl-10 p-2.5  dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500" placeholder="Search" required>
	</div>
	<button type="submit" class="borderless p-2.5 ml-2 text-sm font-medium text-white bg-blue-700 rounded-lg border border-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800">
		<svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path></svg>
		<span class="sr-only">Search</span>
	</button>


</form>




@*<form onsubmit=@PatientNameSearch class="flex flexwrap w-full"
	<p class="text-3xl w-1/2 flex flexwrap">
	Patient Name: <input type="text" @bind-value=inputPatientName class="w-1/2" />
	</p>
	<p class="w-1/2">Max Number of Entries: <input type="number" max=50 min=5 @bind-value=maxNumOfEntries />
	</p>
	<p class="w-1/2">
	<input type="submit" value="Search" class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 border border-blue-700 rounded" />
	</p>
	</form>*@


@if (searchResults == null)
{
	<p><em>Results will appear here</em></p>
}
else
{
	<table class="table dark:bg-grey-700 dark:text-slate-200">
		<thead>
			<tr>
				<th>Name</th>
				<th>Gender</th>
				<th>Birthdate</th>
				<th>ID</th>
			</tr>
		</thead>

		<tbody>
			@foreach (Patient patient in searchResults)
			{
				@*Assuming that if the patient has a name, they will also have other info
					This will error if a patient has a name, but is missing another piece of info.
				*@
				<tr>
					@if (patient.Name.Count > 0)
					{
						<td>@patient.Name[0]</td>
						<td>@patient.Gender</td>
						<td>@patient.BirthDate</td>
						<td><a href="@(serverURL+ "/Patient/" + patient.Id)"> @(patient.Id)</a></td>
					}

				</tr>
			}
		</tbody>

	</table>
}

<div class="w-1/6 mt-3 relative right-0 ">
    <label for="small-input" class="block mb-2 text-sm font-bold text-gray-900 dark:text-gray-300">Max number of entries</label>
    <input type="number" max=50 min=5 @bind-value=maxNumOfEntries id="small-input" class="borderless block p-2 w-full text-gray-900 bg-gray-50 rounded-lg border border-gray-300 sm:text-xs focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500">
</div>


@code {
	//input variables
	private string inputPatientName = "";
	private int maxNumOfEntries = 10;
	private string currentModel = "Patient";

	private string[]? customers;


	//stores all the results
	private Hl7.Fhir.Model.Patient[]? searchResults;


	private string serverURL = "http://hapi.fhir.org/baseR4";

	void PatientNameSearch()
	{
		//
		searchResults = new Patient[maxNumOfEntries];
		Console.WriteLine("Searching");

		//Create a new instance (connection to the server) by first (optional) specifying some settings
		//then connecting to the server
		var settings = new FhirClientSettings
			{
				Timeout = 0,
				PreferredFormat = ResourceFormat.Json,
				VerifyFhirVersion = true,
				PreferredReturn = Prefer.ReturnMinimal
			};

		var client = new FhirClient("http://hapi.fhir.org/baseR4");


		//Defining search paramaters, not sure where to find documentation on these params.
		var q = new SearchParams()
				.Where("name:given=" + inputPatientName)
				//.OrderBy("birthdate", SortOrder.Descending)
				//.SummaryOnly().Include("Patient:organization")
				.LimitTo(maxNumOfEntries);


		//HAPI returns a Bundle when searching (i assume other servers do the same)
		Bundle results = client.Search<Patient>(q);


		//for every search result
		for (int i = 0; i < results.Entry.Count; i++)
		{
			//add patient to our list
			searchResults[i] = (Patient)results.Entry[i].Resource;

			//debugging
			//Console.WriteLine("Result " + i);
			//Console.WriteLine(searchResults[i].Name[0]);
			//Console.WriteLine(results.Entry[i].FullUrl);
		}

		//To ensure the program doesn't crash when only a small amount of results return from the search
		for (int j = 0; j < maxNumOfEntries; j++)
		{
			if (searchResults[j] == null)
			{
				searchResults[j] = new Patient();
			}
			if(j == 0)
			{
				var name =  new HumanName().WithGiven("No results found...");
				searchResults[j].Name.Add(name);
			}

		}

		Console.WriteLine("Results Found");
	}



	

}
